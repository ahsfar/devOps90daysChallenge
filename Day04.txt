Day04 of 90 days devOps challenge

Day 4 Task: Basic Linux Shell Scripting for DevOps Engineers.
=> What is Kernel
The kernel is a computer program that is the core of a computerâ€™s operating system, with complete control over everything in the system.

=> What is Shell
A shell is special user program which provide an interface to user to use operating system services. Shell accept human readable commands from user and convert them into something which kernel can understand. It is a command language interpreter that execute commands read from input devices such as keyboards or from files. The shell gets started when the user logs in or start the terminal.

=> What is Linux Shell Scripting?
A shell script is a computer program designed to be run by a linux shell, a command-line interpreter. The various dialects of shell scripts are considered to be scripting languages. Typical operations performed by shell scripts include file manipulation, program execution, and printing text.

Tasks

Explain in your own words and examples, what is Shell Scripting for DevOps.
What is #!/bin/bash? can we write #!/bin/sh as well?
Write a Shell Script which prints I will complete #90DaysOofDevOps challenge
Write a Shell Script to take user input, input from arguments and print the variables.
Write an Example of If else in Shell Scripting by comparing 2 numbers
Was it difficult? No.

Post about it on LinkedIn and Let me know :)
Article Reference: Click here to read basic Linux Shell Scripting
https://devopscube.com/linux-shell-scripting-for-devops/

YouTube Vedio: EASIEST Shell Scripting Tutorial for DevOps Engineers
https://www.youtube.com/watch?v=_-D6gkRj7xc&list=PLlfy9GnSVerQr-Se9JRE_tZJk3OUoHCkh&index=4
---

My understanding:
Shell scripting for devOps: DevOps tools use scriting in their shell environment. Most of the devOps tools have a command line environment where you can write the scripts and make it a part of automation. Scripting makes it efficient for devops engineer to manage script files for configuration or deployment. 

#!/bin/bash is hashbang or shebang it's mostly used before you write your script normally the first line to tell the system that it's a shell based file. Both can be used and it's better to use /bin/sh so it can use any shell not just bash shell it's good for portability.

#!/bin/sh
echo "i will complete #90DaysOfDevOps challenge"

#!/bin/sh
echo "Please enter a value:"
read value
if [$# -ge 1], then
 argueA ="$1"
else
  argueA="A not entered"
fi
if [$# -ge 2], then
 argueB ="$2"
else
  argueB="B not entered"
fi
echo "That is the value you entered: $value "
echo "ArguementA: $argueA"
echo "ArgumentB: $argueB"


#!/bin/sh
echo "Please enter a value:"
read value
if value = 2
 echo "It's 2"
else
  echo "some other number"
fi
